<?php
/**
 * @file iwapi.install
 * The install file for the iwapi module. Contains the schema, install, enable and update functions.
 */


// ============================
// Installation HOOKs
// ============================

/**
 * Implements HOOK_install().
 */
function iwapi_install() {
  db_update('system')
    ->fields(array('weight' => 50))
    ->condition('name', 'iwapi')
    ->execute();
}

/**
 * Implements HOOK_uninstall().
 */
function iwapi_uninstall() {
  $names = db_select('variable', 'v')
    ->fields('v', array('name'))
    ->condition('name', 'iwapi_%', 'LIKE')
    ->execute()->fetchCol();
  
  foreach ($names as $name) {
    variable_del($name);
  }
}

/**
 * Implements HOOK_schema()
 */
function iwapi_schema() {
  $schema = array();

  $schema['iwapi_packages'] = array(
    'description' => 'List of locations with city name, ZIP code and latitude + longitude',
    'fields' => array(
      'name'        => array('type' => 'varchar', 'length' => 32, 'not null' => TRUE),
      'type'        => array('type' => 'varchar', 'length' => 32, 'not null' => TRUE),
      'label'       => array('type' => 'varchar', 'length' => 128, 'not null' => TRUE),
      'description' => array('type' => 'varchar', 'length' => 255, 'not null' => TRUE),
      'item'        => array('type' => 'text', 'size' => 'big', 'not null' => FALSE, 'serialize' => TRUE),
    ),
    'primary key' => array('name'),
  );
  
  // ------------------------------------------------------
  // Database table changes can be referenced from a file,
  // this way every version of the schema can be cataloged
  // without cluttering the *.install file. This way
  // we can pull old versions for HOOK_update_N() calls
  // and use the same definition in the schema callback.
  // ------------------------------------------------------
  require __DIR__ .'/inserts/schema/iwapi_containers_7004.inc';
  require __DIR__ .'/inserts/schema/iwapi_build_stash_7005.inc';
  
  return $schema;
}

/**
 * Implements HOOK_requirements().
 */
function iwapi_requirements($phase) {
  $requirements = array();
  $t = get_t();
  
  if ($phase == 'runtime') {
    $requirements['zip_archive'] = array(
      'title' => 'Zip Archive',
      'description' => $t(
        'PHP Extension used to handle ZIP archives, to help parse zip files.'
      ),
    );
    
    if (class_exists('ZipArchive', TRUE)) {
      $requirements['zip_archive']['value']    = 'Installed';
      $requirements['zip_archive']['severity'] = REQUIREMENT_OK;
    }
    else {
      $requirements['zip_archive']['value']    = 'Missing';
      $requirements['zip_archive']['severity'] = REQUIREMENT_WARNING;
    }
  }
  return $requirements;
}
 
// ==============================
// Update functions
// ==============================

/**
 * Include new database tables for containing IWAPI based packages.
 * This will allow things such as importers and other such utilities
 * to be configurable and portable.
 */
function iwapi_update_7001() {
  drupal_install_schema('iwapi');
}

/**
 * Updated the package database table to have a item field
 * instead of a data field. Packaged utilities are now
 * serialized instead of being encoded and decoded.
 */
function iwapi_update_7002() {
  $spec = array(
    'type' => 'text',
    'size' => 'big',
    'not null' => FALSE,
    'serialize' => TRUE,
  );

  // Change the name of the field from data to item.
  db_change_field('iwapi_packages', 'data', 'item', $spec);
}

/**
 * Updated the system weight of the module
 * so that its HOOKs get called later.
 */
function iwapi_update_7003() {
  db_update('system')
    ->fields(array('weight' => 50))
    ->condition('name', 'iwapi')
    ->execute();
}

/**
 * Added a new utility table for other modules to
 * store container settings, and themes.
 */
function iwapi_update_7004() {
  require __DIR__ .'/inserts/schema/iwapi_containers_7004.inc';
  
  db_create_table('iwapi_containers', $schema['iwapi_containers']);
}

/**
 * Add a new table for stashing objects that are being
 * built and are potentionally incomplete.
 *
 * Generally use in conjunction with forms since the
 * form cache is unreliable when retrieved from forms 
 * that were not the originator.
 */
function iwapi_update_7005() {
  require __DIR__ .'/inserts/schema/iwapi_build_stash_7005.inc';
  db_create_table('iwapi_build_stash', $schema['iwapi_build_stash']);
}
