<?php
/**
 * @files
 * Contains regular content pages generated by the iwformatters module.
 */


/**
 * Generates the page to display for a field. The page will display a single
 * field, but you can view additional items (if multiple values are set) using
 * the URL GET parameter.
 * 
 * @param string $entity_type
 *  Type of entity which owns this field.
 * @param stdClass $entity
 *  Loaded entity from which to get the field values from.
 * @param array $field
 *  Array definition of the file returned by field_info_field().
 * @return int | array
 *  On error, returns and integer with the menu error code.
 *  On success, return a renderable array with field page content.
 */
function _iwformatter_field_page($entity_type, $entity, $field) {
  list($id, $rid, $bundle) = entity_extract_ids($entity_type, $entity);

  if ($instance = field_info_instance($entity_type, $field['field_name'], $bundle)) {
    $items = field_get_items($entity_type, $entity, $field['field_name']);

    if (!empty($items)) {
      $t_params = array('@field' => $instance['label']);
      $t_params['@title'] = entity_label($entity_type, $entity);

      drupal_set_title(t('@title: @field', $t_params), PASS_THROUGH);

      $delta = 0;
      if (isset($_GET['item']) && is_numeric($_GET['item'])) {
        $delta = intval($_GET['item']);
      }

      return array(
        '#theme'        => 'iwformatter_field_page',
        '#entity_title' => $t_params['@title'],
        '#entity_type'  => $entity_type,
        '#entity'       => $entity,
        '#field'        => $field,
        '#instance'     => $instance,
        '#item'         => isset($items[$delta]) ? $items[$delta] : reset($items),
      );
    }
  }

  // No instance of this field or empty, return a not found.
  return MENU_NOT_FOUND;
}
