<?php
/**
 * @file
 * Contains the core Drupal HOOKs general utilities. 
 */

define('IWSEARCH_RELATED_VAR_SIZE', 'iwsearch_related_num_items');
define('IWSEARCH_RELATED_VAR_SORT', 'iwsearch_related_sorting');
define('IWSEARCH_RELATED_CACHE_TTL', 'iwsearch_related_cache_ttl');
define('IWSEARCH_RELATED_DISPLAY_TYPES', 'iwsearch_related_display_types');
define('IWSEARCH_RELATED_NODE_RESULT_TYPES', 'iwsearch_related_node_result_types');


/**
 * Implements HOOK_menu()
 */
function iwsearch_related_menu() {
  $menu = array();
  $menu['admin/config/content/iwsearch-related'] = array(
    'type' => MENU_NORMAL_ITEM,
    'title' => t('Related Content Blocks'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('iwsearch_related_settings_form'),
    'access arguments' => array('access content'),
    'file' => 'iwsearch_related.admin.inc',
    'description' => 'Controls how and where related content is generated by iwsearch.',
  );

  return $menu;
}

/**
 * Implements HOOK_entity_info_alter()
 */
function iwsearch_related_entity_info_alter(&$info) {
  $entityTypes = array('node' => 'node') + _iwsearch_get_search_entities();

  foreach ($entityTypes as $type => $data) {
    if (key_exists($type, $info)) {  
      $info[$type]['view modes']['related'] = array(
        'label' => t('Related content'),
        'description' => t('Display mode for related content display.'),
        'custom settings' => TRUE,
      );
    }
  }
}

/**
 * Implements HOOK_field_extra_fields()
 */
function iwsearch_related_field_extra_fields() {
  $extras = array();

  $types = variable_get(IWSEARCH_RELATED_DISPLAY_TYPES, array());
  foreach ($types as $type => $bundles) {
    foreach ($bundles as $bundle) {
      $extras[$type][$bundle]['display']['iwsearch_related'] = array(
        'label' => t('Related content'),
        'description' => t('Related content block which display content with similar tags.'),
        'weight' => 20,
      );
    }
  }

  return $extras;
}

/**
 * Implements HOOK_entity_view()
 */
function iwsearch_related_entity_view($entity, $type, $view_mode, $langcode) {
  $entityTypes = variable_get(IWSEARCH_RELATED_DISPLAY_TYPES, array());
  list($id, $rev, $bundle) = entity_extract_ids($type, $entity);

  if ($view_mode !== 'related' && !empty($entityTypes[$type][$bundle])) {
    $settings = field_extra_fields_get_display($type, $bundle, $view_mode);

    // Expensive search do use it sparingly.
    if (empty($settings['iwsearch_related']['visible'])) {
      return;
    }

    $ttl = intval(variable_get('IWSEARCH_RELATED_CACHE_TTL', 3600));
    $cid = "$type:$id";
    
    if ($ttl > 0 && $cache = cache_get($cid, 'iwsearch_related_cache')) {
      $related = $cache->data;
    }
    else {
      $handler = module_exists('apachesolr_search') ? 'iwSolrRelatedContent' : 'iwRelatedContent';
      $handler = new $handler($entity, $type);
      $related = $handler->findRelated();

      if ($ttl > 0) {
        cache_set($cid, $related, 'iwsearch_related_cache', REQUEST_TIME + $ttl);
      }
    }

    list($resultType, $ids) = $related; // Render the results only if a set of results were found.

    if (empty($ids)) {
      return;
    }
    
    $entities = array();
    $entity_views = array();
      
    if ($resultType == 'node') {
      $entities = node_load_multiple($ids, array('status' => NODE_PUBLISHED));
      foreach ($entities as $nid => $node) {
        // $entity_views[$nid] = node_view($node, 'related', $langcode);
        $entity_views[$nid] = [
          'image' => !empty($node->field_image) ? theme('image_style', ['style_name' => 'cd_medium_thumb', 'path' => $node->field_image[LANGUAGE_NONE][0]['uri']]) : NULL,
          'title' => $node->title,
          'type' => 'node',
          'bundle' => $node->type,
          'nid' => $node->nid
        ];
      }
    }
    else {
      $conds    = array();
      $ent_info = entity_get_info($resultType);
        
      // Find only active entities.
      if (isset($ent_info['entity keys']['status'])) {
        $conds[$ent_info['entity keys']['status']] = IWAPI_ACTIVE;
      }
        
      $entities = entity_load($resultType, $ids, $conds);
      foreach ($entities as $id => $ent) {
        $entity_views[$id] = [
          'type' => $resultType,
          'entity' => $ent->view('related', $langcode)
        ];
      }
    }
    
    // TODO: Create a better way to specify which fields
    // get turned into links. Turning all "TEXT" fields into
    // links probably isn't the best solution in general.
    if ($resultType != 'node') {
      foreach ($entity_views as $id => &$ent['entity']) {
        $uri = entity_uri($resultType, $entities[$id]) + array('options' => array());

        foreach ($ent as &$field_disp) {
          if (is_array($field_disp) && isset($field_disp['#field_type']) && $field_disp['#field_type'] === 'text') {
            $delta = 0;

            while (key_exists($delta, $field_disp)) {
              $field_disp[$delta] += array(
                '#type' => 'link',
                '#title' => $field_disp[$delta]['#markup'],
                '#href' => $uri['path'],
                '#options' => array('html' => TRUE) + $uri['options'],
              );

              ++$delta;
            }
          }
        }
      }
    }
    unset($ent, $field_disp);
      
    $entity->content['iwsearch_related'] = array(
      '#theme' => 'iwsearch_related_content',
      '#entities' => $entity_views,
    );
  }
}

/**
 * Implements HOOK_theme()
 */
function iwsearch_related_theme($existing, $type, $theme, $path) {
  return array(
    'iwsearch_related_content' => array(
      'render element' => 'element',
      'template' => 'iwsearch-related-content',
      'path' => $path .'/theme',
      'file' => 'theme.inc',
    ),
  );
}
